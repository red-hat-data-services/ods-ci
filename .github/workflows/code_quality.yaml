name: Lint
on: [push, pull_request]

jobs:
  run_lint:
    name: black formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.2

      - name: Install black formater
        run: pip install black

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
            if [[ $file == *.py ]]; then
               black $file --check --diff
            fi
          done
  run_shellcheck:
     name: shellcheck linter
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v3
      - name: shellcheck_
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: "."
          pattern: "*.sh"
          exclude: "./.git/*"
          check_all_files_with_shebangs: "false"
  robocop:
     name: robocop
     runs-on: ubuntu-latest
      # continue even if Robocop returns issues and fails step
     continue-on-error: true
     steps:
      -   name: Checkout repository
          uses: actions/checkout@v3
      -   name: Install dependencies
          run: |
                python -m pip install --upgrade pip
                pip install robotframework-robocop
      -   name: Run robocop
          run: python -m robocop --verbose --reports sarif . || true
      -   name: Upload SARIF file
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: .sarif.json
            category: robocop
  isort_linter:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.2

      - name: Install isort linter
        run: pip install isort

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
            if [[ $file == *.py ]]; then
               isort $file --check --diff
            fi
          done
  ruff:
    name: ruff
    runs-on: ubuntu-latest
    env:
      poetry_version: '1.7.1'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache poetry in ~/.local
        uses: actions/cache@v3
        id: cached-home-local
        with:
          path: ~/.local
          key: ${{ runner.os }}-local-${{ env.poetry_version }}

      - name: Install poetry
        if: steps.cached-home-local.outputs.cache-hit != 'true'
        run: pip install poetry==${{ env.poetry_version }}

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Configure poetry
        run: |
          poetry env use "${{ steps.setup-python.outputs.python-path }}"

      - run: poetry check --lock

      - name: Install ruff
        run: poetry install --only=dev --sync

      - run: poetry run ruff check ods_ci/
