apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  name: kserve-vllm
  namespace: vllm-gpt2
spec:
  annotations:
    sidecar.istio.io/inject: "true"
    sidecar.istio.io/rewriteAppHTTPProbers: "true"
    serving.knative.openshift.io/enablePassthrough: "true"
    opendatahub.io/dashboard: "true"
    openshift.io/display-name: "vLLLM Openai entry point"
    prometheus.io/port: '8080'
    prometheus.io/path: "/metrics/"
  multiModel: false
  supportedModelFormats:
    - name: vLLM
      autoSelect: true
  containers:
    - name: kserve-container
      #image: kserve/vllmserver:latest
      image: quay.io/modh/vllm@sha256:e14cae9114044dc9fe71e99c3db692a892b2caffe04283067129ab1093a7bde5
      startupProbe:
        httpGet:
          port: 8080
          path: /health
        # Allow 12 minutes to start
        failureThreshold: 24
        periodSeconds: 30
      readinessProbe:
        httpGet:
          port: 8080
          path: /health
        periodSeconds: 30
        timeoutSeconds: 5
      livenessProbe:
        httpGet:
          port: 8080
          path: /health
        periodSeconds: 100
        timeoutSeconds: 8
      terminationMessagePolicy: "FallbackToLogsOnError"
      terminationGracePeriodSeconds: 120
      args:
        - --port
        - "8080"
        - --model
        - /mnt/models/gpt2
        - --served-model-name
        - "gpt2"
      command:
        - python3
        - -m
        - vllm.entrypoints.openai.api_server
      env:
        - name: STORAGE_URI
          value: pvc://vlmm-gpt2-claim/
        - name: HF_HUB_CACHE
          value: /tmp
        - name: TRANSFORMERS_CACHE
          value: $(HF_HUB_CACHE)
        - name: NUM_GPUS
          value: "1"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
      ports:
        - containerPort: 8080
          protocol: TCP
      resources:
        limits:
          cpu: "4"
          memory: 8Gi
          nvidia.com/gpu: "1"
        requests:
          cpu: "1"
          memory: 4Gi
          nvidia.com/gpu: "1"
