[tool.poetry]
name = "ods-ci"
version = "0.1.0"
description = "Robot Framework test suites for Red Hat OpenShift Data Science"
authors = ["RHODS QE <ods-qe@redhat.com>"]
readme = "README.md"
packages = [{include = "ods_ci"}]

[tool.poetry.dependencies]
python = "^3.8.1"
reportportal-client = "^5.2.5"
robotframework = "^6"
robotframework-debuglibrary = ">=2.0.0"
robotframework-requests = "^0.9.4"
robotframework-seleniumlibrary = "^6.1.1"
# Selenium has been releasing versions prone to breaking, let's pin to a single release
selenium = "4.13.0"
robotframework-jupyterlibrary = "^0.4.0"
robotframework-openshift = {git = "https://git@github.com/red-hat-data-services/robotframework-openshift.git"}
pytest = "^7.2.1"
pytest-logger = "^0.5.1"
Pygments = "^2.14.0"
requests = "^2.28.2"
escapism = "^1.0.1"
semver = "^2"
rpaframework = "^27.2.0"
pexpect = "^4.8.0"
python-openstackclient = "^6.2.0"
awscli = "^1.27.100"
kfp-tekton = "==1.5.9"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
robotframework-lsp = ">=1.11.0"
robotframework-robocop = "^4.1.0"
robotframework-tidy = "^4.5.0"
black = ">20.0.0"
ruff = "0.1.11"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
preview = true
select = [
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "E", "W", # pycodestyle errors/warnings
  "F", # Pyflakes
  "FA", # flake8-future-annotations
  "FLY", # flynt
  "G", # flake8-logging-format
  "I", # isort
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "ISC", # implicit string concatenation
  "N", # pep8-naming
  "NPY002", # numpy-legacy-random
  "PERF", # Perflint
  "PGH", # pygrep-hooks
  "PIE", # misc lints
  "PL", # pylint
  "PL", # pylint
  "PYI", # flake8-pyi
  "Q", # flake8-quotes
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "S102", # flake8-bandit: exec-builtin
  "T10", # flake8-debugger
  "TCH", # type-checking imports
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "YTT", # flake8-2020
]
ignore = [
 # intentionally disabled
  "E203", # space before : (needed for how black formats slicing)
 # various limits and unimportant warnings
  "E501", # Line too long
  "E741", # Ambiguous variable name: `l`
  "PLR0904", # Too many public methods (56 > 20)
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments in function definition (6 > 5)
  "PLR0915", # Too many statements
  "PLR0917", # Too many positional arguments (10/5)
  "PLR0917", # Too many positional arguments (7/5)
  "PLR2004", # Magic value used in comparison
  # "W503", # not yet implemented; line break before binary operator
  # "W504", # not yet implemented; line break after binary operator
 # TODO
  "B006", # Do not use mutable data structures for argument defaults
  "B007", # Loop control variable `retry` not used within loop body
  "COM812", # Trailing comma missing
  "F841", # Local variable `response` is assigned to but never used
  "FA100", # Missing `from __future__ import annotations`, but uses `typing.Optional`
  "I001", # Import block is un-sorted or un-formatted
  "INP001", # File `ods_ci/tests/Resources/Page/ODH/JupyterHub/jupyter-helper.py` is part of an implicit namespace package. Add an `__init__.py`.
  "ISC001", # Implicitly concatenated string literals on one line
  "N806", # Variable `outputText` in function should be lowercase
  "N813", # Camelcase `ElementTree` imported as lowercase `et`
  "N816", # Variable `rotatingHandler` in global scope should not be mixedCase
  "N999", # Invalid module name: 'createPolarionTestRun'
  "PERF401", # Use a list comprehension to create a transformed list
  "PLC0415", # `import` should be at the top-level of a file
  "PLC1901", # `filter_value != ""` can be simplified to `filter_value` as an empty string is falsey
  "PLR5501", # Use `elif` instead of `else` then `if`, to reduce indentation
  "PLR6201", # Use a `set` literal when testing for membership
  "PLR6301", # Method `_render_template` could be a function, class method, or static method
  "PLW1514", # `codecs.open` in text mode without explicit `encoding` argument
  "PLW2901", # `for` loop variable `tag_it` overwritten by assignment target
  "Q000", # Single quotes found but double quotes preferred
  "RET501", # Do not explicitly `return None` in function if it is the only possible return value
  "RET503", # Missing explicit `return` at the end of function able to return non-`None` value
  "RET504", # Unnecessary assignment to `names` before `return` statement
  "RET505", # Unnecessary `else` after `return` statement
  "UP015", # Unnecessary open mode parameters
  "UP031", # format specifiers instead of percent format
  "UP032", # Use f-string instead of `format` call
  "UP034", # Avoid extraneous parentheses
  "W605", # Invalid escape sequence: `\d`
 # TODO(jdanek)
  "C416", # Unnecessary `list` comprehension (rewrite using `list()`)
  "E117", # Over-indented
  "E231", # Missing whitespace after ','
  "E401", # Multiple imports on one line
  "E402", # Module level import not at top of file
  "E711", # Comparison to `None` should be `cond is not None`
  "E712", # Comparison to `True` should be `cond is True` or `if cond:`
  "E721", # Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks
  "E722", # Do not use bare `except`
  "F401", # `re` imported but unused
  "F403", # `from python_terraform import *` used; unable to detect undefined names
  "F405", # `IsNotFlagged` may be undefined, or defined from star imports
  "F541", # f-string without any placeholders
  "F811", # Redefinition of unused `hide_values_in_op_json` from line 565
  "F821", # Undefined name `os`
  "PIE790", # Unnecessary `pass` statement
  "PLR1714", # Consider merging multiple comparisons. Use a `set` if the elements are hashable.
  "Q004", # Unnecessary escape on inner quote character
  "RET507", # Unnecessary `else` after `continue` statement
  "RET508", # Unnecessary `elif` after `break` statement
  "W292", # No newline at end of file
  "W293", # Blank line contains whitespace
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

docstring-code-format = true
docstring-code-line-length = "dynamic"
